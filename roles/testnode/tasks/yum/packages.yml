---
# this is needed for the yum-complete-transation command next
- name: Ensure yum_utils is present.
  package:
    name: yum-utils
    state: present
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version|int <= 7

- name: Removing saved yum transactions
  command: yum-complete-transaction --cleanup-only
  register: transaction_cleanup
  changed_when: "'Cleaning up' in transaction_cleanup.stdout"
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version|int <= 7

- name: Check if ceph-debuginfo is installed
  command: rpm -q ceph-debuginfo
  ignore_errors: yes
  changed_when: false
  register: bz1234967
  tags:
    - remove-ceph

- name: Work around https://bugzilla.redhat.com/show_bug.cgi?id=1234967
  command: rpm -e ceph-debuginfo
  when: bz1234967 is defined and bz1234967.rc == 0
  tags:
    - remove-ceph

- name: Ensure ceph packages are not present.
  package:
    name: "{{ ceph_packages_to_remove|list }}"
    state: absent
  tags:
    - remove-ceph

- name: Ensure ceph dependency packages are not present.
  package:
    name: "{{ ceph_dependency_packages_to_remove|list }}"
    state: absent
  tags:
    - remove-ceph-dependency

# We need the individual package manager ansible modules here because stuff like 'allow_downgrade' can't be passed via the package module.
- name: Install packages
  yum:
    name: "{{ packages|list }}"
    state: present
    allow_downgrade: yes
  when:
    - packages|length > 0
    - (ansible_os_family == 'RedHat' and ansible_distribution_major_version|int <= 7)

- name: Install packages
  dnf:
    name: "{{ packages|list }}"
    state: present
    allow_downgrade: yes
  when:
    - packages|length > 0
    - (ansible_os_family == 'RedHat' and ansible_distribution_major_version|int >= 8)

- name: Install epel packages
  package:
    name: "{{ epel_packages|list }}"
    state: present
    enablerepo: epel
  when: epel_packages|length > 0

- name: Remove packages
  package:
    name: "{{ packages_to_remove|list }}"
    state: absent
  when: packages_to_remove|length > 0

- name: Upgrade packages
  package:
    name: "{{ packages_to_upgrade|list }}"
    state: latest
  when: packages_to_upgrade|length > 0
